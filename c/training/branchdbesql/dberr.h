#ifndef __DBERR_H
#define __DBERR_H

/* ----- Automaticaly generated by P4 stamps - Do not edit! ----- */
static char rcs_id_dberr_h_7BC21610[] = "#(@) 7BC21610 $Id: //depot/cortex/base/common/common_4.3/src/esql/informix/ctx/dberr.h#2 $";
static char rcs_datetime_dberr_h_7BC21610[] = "#(@) 7BC21610 $DateTime: 2008/10/06 10:25:37 $";
static char rcs_change_dberr_h_7BC21610[] = "#(@) 7BC21610 $Change: 62543 $";
static char rcs_author_dberr_h_7BC21610[] = "#(@) 7BC21610 $Author: sdods $";
/* ------------------------ End of P4 stamps -------------------- */
/*---------------------------Includes-----------------------------------*/
/*---------------------------Externs------------------------------------*/
/*---------------------------Macros-------------------------------------*/
#define SQE_CNVERR 1			/* type conversion error	*/
#define SQE_EOFERR 2			/* end of scan/no match		*/
#define SQE_MLTERR 3			/* select returns multi rows	*/
#define SQE_LCKERR 4			/* record locked		*/
#define SQE_KEYERR 5			/* duplicate key		*/
#define SQE_NTXERR 6			/* no current transaction	*/
/*MV, NMR015776, 22/12/2006*/
#define SQE_PNFERR 7			/* referenced parent record does not exists*/
						
#define DBDECL(var)   long    var
#define CVTCTXTODB(ctx,db)      (db) = dbu_date_cvt_to_db(ctx)
#define CVTDBTOCTX(ctx,db)      (ctx) = dbu_date_cvt_to_norm(db)
#define CVTDBTOLONG(db)	(db)
/* and a few other bits	*/
#define TABLENOTEXISTS	-206
#define READ_ONLY_CURSOR	"for read only"
/*---------------------------Enums--------------------------------------*/
enum {
	SQI_DIRTY_READ = 0,		/* Allow all selects no lock	*/
	SQI_CURSOR_STABILITY,		/* Shared lock on current row	*/
	SQI_REPEATABLE_READ,		/* Shared lock on all selected	*/
	SQI_COMMITTED_READ		/* Selects only committed data  */
};
/*---------------------------Typedefs-----------------------------------*/
/*---------------------------Globals------------------------------------*/
/*---------------------------Statics------------------------------------*/
/*---------------------------Prototypes---------------------------------*/
extern int  sql_errtyp(void);
extern long sql_sqlcode(void);
extern int  sql_open(char *dbname);
extern int  sql_close(void);
extern int  sql_begin(void);
extern int  sql_commit(void);
extern int  sql_abort(void);
extern int  sql_commit_or_abort(int ret);
extern int sql_commit_and_begin(long loops_done, long commitfreq);
extern int  sql_cmtbgn(void);
extern long sql_txid(void);
extern int sql_interr(long sqlcode);
extern int sql_stat2interr(char *sqlstat);
extern char *sql_sqlstat(void);
extern char *mysql_sqlmsg(void);
extern long sql_rowcount(bool prep);
extern long sql_isamcode(void);
extern int sql_iscolumn (char *table, char *column);
extern int  sql_set_isolation(int level);
extern int sql_rdefmtdate(long *jdate,char *fmtstring, char *inbuf);
extern int sql_rmdyjul(short *mdy, long *jdate);
extern int sql_rstrdate(char *inbuf, long *jdate);
#endif


/* ----- Automaticaly generated by P4 stamps - Do not edit! ----- */
static char rcs_id[] = "#(@) 7CD99CDD $Id: //depot/cortex/base/common/common_4.3/src/esql/informix/ctx/dberr.ec#4 $";
static char rcs_datetime[] = "#(@) 7CD99CDD $DateTime: 2009/04/28 11:33:43 $";
static char rcs_author[] = "#(@) 7CD99CDD $Author: sdods $";
static char rcs_change[] = "#(@) 7CD99CDD $Change: 70157 $";
static char rcs_compdt[] = "#(@) 7CD99CDD $Compiled: " __DATE__ " " __TIME__ " $";
#ifdef __EXE__
static char rcs_exe[] = "#(@) 7CD99CDD $Exe: " __EXE__ " $";
#else
static char rcs_exe[] = "#(@) 7CD99CDD $Exe: unknown $";
#endif
#ifdef SP4OSVER
static char rcs_osver[] = "#(@) 7CD99CDD $Osver: " SP4OSVER " $";
#endif
#ifdef SP4TUXVER
static char rcs_tuxver[] = "#(@) 7CD99CDD $Tuxver: " SP4TUXVER " $";
#endif
#ifdef SP4DBVER
static char rcs_dbver[] = "#(@) 7CD99CDD $Dbver: " SP4DBVER " $";
#endif
/* ------------------------ End of P4 stamps -------------------- */
/*---------------------------Includes-----------------------------------*/
#include <portable.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include <sldbg.h>

#include "dberr.h"
/*#include <sqlca.h>*/
#include <ifxtypes.h>
/*---------------------------Externs------------------------------------*/
/*---------------------------Macros-------------------------------------*/
#define	ERR_MSG_LEN	512
			/* abort processing on unrecoverable db error	*/
#define EXITONFATAL()	{ if (-349 == sql_sqlcode())                        \
                          { DBG_PRINTF((dbg_fatal, "FATAL db error "  \
                                        "[%ld] - terminating process",\
                                        sql_sqlcode()));                    \
                            exit(1); }                                \
                        }

/*---------------------------Enums--------------------------------------*/
/*---------------------------Typedefs-----------------------------------*/
/*---------------------------Globals------------------------------------*/
/*---------------------------Statics------------------------------------*/
EXEC SQL BEGIN DECLARE SECTION;
	char	M_class_origin_val[255];
	char	M_subclass_origin_val[255];
	char	M_message_text_val[255];
	int	M_messlength_val;
	char	M_dbname[255];
EXEC SQL END DECLARE SECTION;

static long	M_txid = FAIL;
static char	M_err_msg[ERR_MSG_LEN];

/*---------------------------Prototypes---------------------------------*/

/*--------------------------------------------------------------------------
 *
 * Function	: sql_sqlmsg
 *
 * Purpose	: Returns ESQL error/warning description
 *
 * Parameters	: void
 *
 * Returns	: error/warning message
 *
 * Comments	:
 *
 *------------------------------------------------------------------------*/
public char *mysql_sqlmsg(void)
{
	int	len = 0;
	long	sqlcode, sqlerrd1;
static	char	buf[2*ERR_MSG_LEN];


	sqlcode = sql_sqlcode();

	if (100 == sqlcode)
		sprintf(buf, "No matching records found");
	else
	{
		if( rgetlmsg( (int)sqlcode, M_err_msg,ERR_MSG_LEN, &len ))
			strcpy(buf,"sqlcode rgetlmsg failed");
		else
		{
			M_err_msg[len] = 0;
			if(sqlca.sqlerrm[0])
				sprintf(buf, M_err_msg, sqlca.sqlerrm);
			else
				sprintf(buf, M_err_msg);

			sqlerrd1 = sqlca.sqlerrd[1];

			if(sqlerrd1)
			{
				if(rgetlmsg( (int)sqlerrd1,
					M_err_msg, ERR_MSG_LEN, &len))
					strcat(buf, " sqlerrd1 rgetmsg failed");
				else
					sprintf(buf + strlen(buf), M_err_msg);
			}
		}
	}

	sprintf(buf+strlen(buf)," (%ld:[%s])", sqlcode, SQLSTATE);

	return( buf );
}

